dados_100 = metrics(paste(root_path,"100", sep="/"), 100)
dados_100_event = trim_df(get_event_df(dados_100))
View(dados_100_event)
dados_100_ack = trim_df(get_ack_df(dados_100))
dados_100_data = analysis(dados_100_ack, dados_100_event)
View(dados_100_ack)
View(dados_100_event)
analysis = function(df_ack, df_event) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
result = data.frame(Ack=mean_df_ack, Event=mean_df_event)
return(result)
}
dados_100_data = analysis(dados_100_ack, dados_100_event)
View(dados_100_data)
analysis = function(df_ack, df_event, messages) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
result = data.frame(MessagesPerSecond=messages,Ack=mean_df_ack, Event=mean_df_event)
return(result)
}
dados_100_data = analysis(dados_100_ack, dados_100_event)
dados_100_data = analysis(dados_100_ack, dados_100_event, 100)
View(dados_100_data)
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
for (i in list) {}
for (i in list) { i}
for (i in list) {
print i
}
for (i in list) {
print i)
for (i in list) {
print i}
list
list[1]
for (i in list) {
print i}
for (i in list) {print i}
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
for (i in list ) {
list
}
for (i in list ) {
i
}
for (i in 1:length(list)) {
list[i]
}
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
df$MessagesPerSecond=messages
df$Ack=mean_df_ack
df$Event=mean_df_event
}
create_frame = function(root_path) {
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path
)
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
df$MessagesPerSecond=messages
df$Ack=mean_df_ack
df$Event=mean_df_event
df
}
create_frame = function(root_path) {
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path)
# dados_100 = metrics(paste(root_path,"100", sep="/"), 100)
# dados_100_event = trim_df(get_event_df(dados_100))
# dados_100_ack = trim_df(get_ack_df(dados_100))
# dados_100_data = analysis(dados_100_ack, dados_100_event, 100)
#
# dados_100_event = subset(dados_100, dados_100$locale == 'EventSent:')
# mean(dados_100_event$total)
# dados_420 = metrics(paste(root_path,"420", sep="/"), 420)
# dados_420_event = subset(dados_420, dados_420$locale == 'EventSent:')
# mean(dados_420_event$total)
# dados_840 = metrics(paste(root_path,"840", sep="/"), 840)
# dados_840_event = subset(dados_840, dados_840$locale == 'EventSent:')
# mean(dados_840_event$total)
# dados_1260 = metrics(paste(root_path,"1260", sep="/"), 1260)
# dados_1260_event = subset(dados_1260, dados_1260$locale == 'EventSent:')
# mean(dados_1260_event$total)
# dados_2100 = metrics(paste(root_path,"2100", sep="/"), 2100)
# dados_2100_event = subset(dados_2100, dados_2100$locale == 'EventSent:')
# mean(dados_2100_event$total)
# dados_4200 = metrics(paste(root_path,"4200", sep="/"), 4200)
# dados_4200_event = subset(dados_4200, dados_4200$locale == 'EventSent:')
# mean(dados_4200_event$total)
# dados_8400 = metrics(paste(root_path,"8400", sep="/"), 8400)
# dados_8400_event = subset(dados_8400, dados_8400$locale == 'EventSent:')
# mean(dados_8400_event$total)
# dados_16800 = metrics(paste(root_path,"16800", sep="/"), 16800)
# dados_16800_event = subset(dados_16800, dados_16800$locale == 'EventSent:')
# dados_16800_ack = subset(dados_16800, dados_16800$locale == 'ACK:')
# trimmed_event = dados_16800_event[10:length(dados_33600_event$total)-1,]
# trimmed_ack_16800 = dados_16800_ack[10:length(dados_33600_event$total)-1,]
# mean(dados_16800_event$total)
# hist(dados_16800_ack$total)
#
# dados_33600 = metrics(paste(root_path,"33600", sep="/"), 33600)
# dados_33600_event = subset(dados_33600, dados_33600$locale == 'EventSent:')
# dados_33600_ack = subset(dados_33600, dados_33600$locale == 'ACK:')
# trimmed_event_33600 = dados_33600_event[10:length(dados_33600_event$total)-1,]
# trimmed_ack_33600 = dados_33600_ack[10:length(dados_33600_event$total)-1,]
#
# mean(trimmed_ack_33600$total)
# boxplot(trimmed_ack_33600$total)
# hist(trimmed_ack_33600$total)
#
# dados_67200 = metrics(paste(root_path,"67200", sep="/"), 67200)
# dados_67200_event = subset(dados_67200, dados_67200$locale == 'EventSent:')
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
analysis_final$MessagesPerSecond=100
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
df <- rbind(df, data.frame(MessagesPerSecond=messages, Ack=mean_df_ack, Event=mean_df_event))
}
create_frame = function(root_path) {
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path)
analysis_table
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
analysis(dados_100_ack, dados_100_event, analysis_final)
analysis(dados_100_ack, dados_100_event, 100,analysis_final)
View(analysis_final)
analysis_final= analysis(dados_100_ack, dados_100_event, 100,analysis_final)
View(analysis_final)
source('~/Dropbox/Mestrado/Pesquisa/storm_logs/storm_log_reader.R')
dados_100_event = trim_df(get_event_df(dados_100))
dados_100_ack = trim_df(get_ack_df(dados_100))
mean(dados_100_ack)
mean(dados_100_ack$total)
mean(dados_100_event$total)
analysis_final= analysis(dados_100_ack, dados_100_event, 100,analysis_final)
View(analysis_final)
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
df <- rbind(df, data.frame(MessagesPerSecond=messages, Ack=mean_df_ack, Event=mean_df_event))
return df
}
create_frame = function(root_path) {
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path)
analysis_table
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_event = mean(df_event$total)
df <- rbind(df, data.frame(MessagesPerSecond=messages, Ack=mean_df_ack, Event=mean_df_event))
return df
}
create_frame = function(root_path) {
#   list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
list = c(100)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path)
analisys_table
analysis_table
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_ack
mean_df_event = mean(df_event$total)
mean_df_event
df <- rbind(df, data.frame(MessagesPerSecond=messages, Ack=mean_df_ack, Event=mean_df_event))
df
return df
}
create_frame = function(root_path) {
#   list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
list = c(100)
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis_final = analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
analysis_table = create_frame(root_path)
analysis_table
require(plyr)
metrics = function(directory, messages) {
dados_1.1 = read.csv(paste(directory,"worker-ack-1.log", sep="/"), sep=" ", header = TRUE)
dados_1.2 = read.csv(paste(directory,"worker-ack-2.log", sep="/"), sep=" ", header = TRUE)
dados_1.3 = read.csv(paste(directory,"worker-ack-3.log", sep="/"), sep=" ", header = TRUE)
dados_1.4 = read.csv(paste(directory,"worker-ack-4.log", sep="/"), sep=" ", header = TRUE)
dados_1.5 = read.csv(paste(directory,"worker-ack-5.log", sep="/"), sep=" ", header = TRUE)
dados_1.6 = read.csv(paste(directory,"worker-ack-6.log", sep="/"), sep=" ", header = TRUE)
dados_1.7 = read.csv(paste(directory,"worker-ack-7.log", sep="/"), sep=" ", header = TRUE)
dados = rbind(dados_1.1, dados_1.2, dados_1.3, dados_1.4, dados_1.5, dados_1.6, dados_1.7)
dados_consumption = subset(dados, dados$unit == 'ConsumptionSpout' | dados$unit == 'AverageCalcBolt')
grouped = ddply(dados_consumption, .(time,locale, unit), summarize, total = length(time))
return(grouped)
}
root_path = "07212014/experimento4/"
get_event_df = function(df) {
event = subset(df, df$locale == 'EventSent:')
return(event)
}
get_ack_df = function(df) {
ack = subset(df, df$locale == 'ACK:')
return(ack)
}
trim_df = function(df) {
trim = df[10:length(df$total)-1,]
return(trim)
}
analysis = function(df_ack, df_event,messages, df) {
mean_df_ack = mean(df_ack$total)
mean_df_ack
mean_df_event = mean(df_event$total)
mean_df_event
df <- rbind(df, data.frame(MessagesPerSecond=messages, Ack=mean_df_ack, Event=mean_df_event))
df
return df
}
create_frame = function(root_path, list) {
analysis_final = data.frame(MessagesPerSecond=numeric(), Ack=numeric(), Event=numeric())
for (i in 1:length(list)) {
dados = metrics(paste(root_path, list[i], sep="/"), list[i])
dados_event = trim_df(get_event_df(dados))
dados_ack = trim_df(get_ack_df(dados))
analysis_final = analysis(dados_ack, dados_event, list[i], analysis_final)
}
return(analysis_final)
}
#   list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
list = c(100, 420)
analysis_table = create_frame(root_path, list)
analysis_table
list = c(100, 420, 840, 1260, 2100, 4200, 8400, 16800, 33600, 67200)
analysis_table = create_frame(root_path, list)
setwd("~/Dropbox/Mestrado/Pesquisa/storm_logs")
dados = read.csv(root_path, header=TRUE)
root_path = "log.csv"
dados = read.csv(root_path, header=TRUE)
View(dados)
dados = read.csv(root_path, header=TRUE)
View(dados)
dados = read.csv(root_path, header=TRUE, sep = ";")
View(dados)
root_path = "teste.log"
dados = read.csv(root_path, header=TRUE, sep = ";")
setwd("~/Documents/workspace/workspace-mestrado/alarm-storm")
root_path = "teste.log"
read.csv(root_path, sep=";", header=TRUE)
root_path = "teste.log"
read.csv(root_path, sep=";", header=TRUE)
data = read.csv(root_path, sep=";", header=TRUE)
View(data)
grouped = ddply(data, .(hour, minute, seconds), summarize, total = length(time))
grouped = ddply(data, .(hour, minute, second), summarize, total = length(time))
View(grouped)
grouped = ddply(data, .(minute), summarize, total = length(time))
View(grouped)
grouped = ddply(data, .(minute), summarize, total = length(minute))
View(grouped)
View(data)
View(data)
grouped = ddply(data, .(minute), summarize, total = length(minute), Mean = mean(total), SD = sd(total))
View(grouped)
grouped = ddply(data, .(minute), summarize, messages = length(minute), Mean = mean(total), SD = sd(total))
View(grouped)
data = read.csv(root_path, sep=";", header=TRUE)
View(dados_8400_event)
View(data)
data = read.table(root_path, sep=";", header=TRUE)
View(data)
data = read.table(root_path, sep=";", header=TRUE)
View(data)
root_path = "teste2.log"
data2 = read.table(root_path, sep=";", header=TRUE)
grouped = ddply(data, .(minute), summarize, messages = length(minute), Mean = mean(total), SD = sd(total))
View(grouped)
grouped = ddply(data2, .(minute), summarize, messages = length(minute), Mean = mean(total), SD = sd(total))
View(grouped)
data = read.table("teste.log", sep=";", header=TRUE)
data2 =  read.table("teste3.log", sep=";", header=TRUE)
data_final = cbind(data, data2)
View(data_final)
data_final = merge(data, data2, by.x="minute", by.y="minute")
View(data_final)
data_final = ddply(rbind(data, data2), .(hour,minute), summarize, total_sent = sum(total))
View(data_final)
value = sum(data$total)
value2 = sum(data2$total)
value + value2
data3 =  read.table("teste3.log", sep=";", header=TRUE)
data_final = ddply(rbind(data, data2,data3), .(hour,minute), summarize, total_sent = sum(total))
View(data_final)
value + value2 + value2
View(data_final)
data_final = ddply(rbind(data, data2,data3), .(hour,minute,second), summarize, total_sent = sum(total))
View(data_final)
data_final = ddply(rbind(data, data2,data3), .(hour,minute,second), summarize, event = event,total_sent = sum(total))
data_final = ddply(rbind(data, data2,data3), .(hour,minute,second), summarize, event_sent = event,total_sent = sum(total))
View(data2)
data_final = ddply(rbind(data, data2,data3), .(hour,minute,second, event), summarize,total_sent = sum(total))
View(data_final)
